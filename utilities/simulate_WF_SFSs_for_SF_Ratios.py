"""
    Author: Jody Hey

    basic script for simualting data sets for SF_Ratios.py
    generated under Wright-Fisher with a 2Ns value or density 

"""
import os.path as op
import random
import sys
# Get the parent directory
parent_dir = op.abspath(op.join(op.dirname(__file__), '..'))
# Add the parent directory to sys.path
sys.path.insert(0, parent_dir)
import SF_Ratios_functions as SRF
import numpy as np 


random.seed(1) 
np.random.seed(2) 

densityof2Ns = "lognormal"
# densityof2Ns = "gamma"
densityof2Ns = "normal"
# densityof2Ns = "fixed2Ns"
thetaN = 10000
thetaS = 10000
nc = 200
folded = False
if densityof2Ns=="lognormal":
    g = [3,1.2]
    max2Ns = 1
elif densityof2Ns == "gamma":
    g = [2,2]
    max2Ns = 1
elif densityof2Ns == "normal":
    g = [-5,3]
    max2Ns = None
elif densityof2Ns == "fixed2Ns":
    g = [-10]
    max2Ns = None
pointmass_and_value = (False,False)
pointmass_and_value = (0.4,0.0)

ddir = "/mnt/d/genemod/better_dNdS_models/popgen/SF_Ratios/testbed/"
fnamebase = "testbed_{}_{}data.txt"

pointmassheaderstring = '' if pointmass_and_value[0]==False else " point mass location: {}  point mass value: {} ".format(pointmass_and_value[0],pointmass_and_value[1])
pointmassfilenamestring = '' if pointmass_and_value[0]==False else ( "pm0_" if pointmass_and_value[1]==0.0 else "pm_")
foldstr = "unfolded" if folded == False else "folded"

foutname = op.join(ddir,fnamebase).format(densityof2Ns,pointmassfilenamestring)
# def simsfsratio(thetaN,thetaS,max2Ns,nc ,maxi,dofolded,misspec,densityof2Ns,params,pm0, returnexpected, thetaratio,pmmass = None,pmval = None)
if pointmass_and_value[1] == 0.0:
    nsfs,ssfs,ratios = SRF.simsfsratio(thetaN,thetaS,max2Ns,nc,None,folded,None,densityof2Ns,g,pointmass_and_value[0],False,None)
else:
    nsfs,ssfs,ratios = SRF.simsfsratio(thetaN,thetaS,max2Ns,nc,None,folded,None,densityof2Ns,g,None,False,None,pmmass=pointmass_and_value[0],pmval=pointmass_and_value[1])

pointmassstring = '' if pointmass_and_value[0]==False else " point mass location: {}  point mass value: {} ".format(pointmass_and_value[0],pointmass_and_value[1])
foldstr = "unfolded" if folded == False else "folded"
header = "Generated by simulate_WF_SFSs_for_SF_Ratios.py. nc: {} density: {} parameters: {} thetaN: {}  thetaS: {} {} {}\n".format(nc,densityof2Ns,g,thetaN,thetaS,pointmassstring,foldstr)

f = open(foutname,'w')
f.write(header)
f.write("{}\n\n".format(" ".join(list(map(str,nsfs)))))
f.write("{}\n".format(" ".join(list(map(str,ssfs)))))
f.close()

